name: "aws-db-build"

on:
  #push:
  #  branches: [ "main" ]

  workflow_dispatch:

env:
  AWS_REGION: us-east-1   

jobs:
  tf-db-plan:
    name:  "Terraform DB Plan"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    permissions:
        pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Format TF
      run: terraform fmt

    - name: Initialize TF
      run: terraform init

    - name: TF Validate
      run: terraform validate -no-color

    - name: TF Plan
      run: terraform plan --var-file=./terraform-db.tfvars -no-color -out tf.plan

  tf-db-apply:
        name:  "Terraform DB Apply"
        needs: tf-db-plan
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: ./terraform
        permissions:
            pull-requests: write
        steps:
        - name: Checkout
          uses: actions/checkout@v3
    
        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
    
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
    
        - name: Format TF
          run: terraform fmt
    
        - name: Initialize TF
          run: terraform init
    
        - name: TF Validate
          run: terraform validate -no-color
    
        - name: TF Apply
          run: terraform apply -auto-approve --var-file=./terraform-db.tfvars